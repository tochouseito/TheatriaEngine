workspace: Theatria
cpp_standard: 20
c_standard: 17
platforms: [x64]

configs:
  - name: Debug
    defines: [DEBUG]
    symbols: true
    optimize: None
    msvc:
      runtime: MDd
      warning_level: 4
      treat_warnings_as_errors: false
      inline_expansion: None
      intrinsics: false
      ltcg: false
  - name: Release
    defines: [NDEBUG]
    optimize: Speed
    msvc:
      runtime: MD
      warning_level: 4
      treat_warnings_as_errors: false
      inline_expansion: Ob2
      intrinsics: false
      ltcg: false

msvc:
  multiprocessor: true
  common_defines: [UNICODE, _UNICODE, NOMINMAX, _CRT_SECURE_NO_WARNINGS]
  compile_options: [/W4, /permissive-, /Zc:preprocessor, /EHsc, /MP]
  extra_compile_options: [/source-charset:utf-8, /utf-8]

build:
  target_dir: ${SolutionDir}..\generated\outputs\${Configuration}\
  obj_dir:${SolutionDir}..\generated\intermediate\${ProjectName}\
  target_name: ${ProjectName}

pch: 
  enable: false

targets:
  - name: assimp
    type: StaticLib
    sources: [project/engine/**.cpp, project/engine/**.h]
    include_dirs: [
      ${ProjectDir}include, ${ProjectDir}code, ${ProjectDir}, ${ProjectDir}contirib\zlib,
      ${ProjectDir}contrib\pugixml\src,$(ProjectDir)contrib\utf8cpp\source,$(ProjectDir)contrib\rapidjson\include,$(ProjectDir)contrib,$(ProjectDir)contrib\unzip,$(ProjectDir)contrib\openddlparser\include,$(ProjectDir)code\..,$(ProjectDir)build,$(ProjectDir)build\include,$(ProjectDir)build\contrib\zlib
      ]
    links: [d3d12, dxgi, dxguid]
    treat_warnings_as_errors: true
    build:
      target_dir: ${ProjectDir}lib\${Configuration}\
      obj_dir:${SolutionDir}..\generated\intermediate\External\${ProjectName}\
      target_name: ${ProjectName}
    msvc:
      disable_warnings: [4244]
      extra_compile_options: [/bigobj]
    configs:
      - name: Debug
        build:
          target_name: assimp-vc143-mdd
      - name: Release
        build:
          target_name: assimp-vc143-md

  - name: BuildWatcher
    type: CsWindowedApp
    sources:
      - project/editor_cs/**.cs
    cs:
      sdk: Microsoft.NET.Sdk
      target_framework: net8.0-windows
      lang_version: 12.0
      nullable: enable
      allow_unsafe: false
      target_framework_version: v4.8
    postbuild_copy_dirs:
      - { from: assets, to: assets }
    configs:
      - name: Debug
        build:
          target_dir: ..\..\generated\outputs\Debug\
      - name: Release
        build:
          target_dir: ..\..\generated\outputs\Release\

  - name: ChoEditor
    type: WindowedApp
    sources: []
    include_dirs: [${SolutionDir}, ${SolutionDir}ChoMath, ${SolutionDir}ChoMath\include]
    treat_warnings_as_errors: false
    working_directory: ${target_dir}
    configs:
      - name: Debug
        inline_expansion: None
        intrinsics: false
        ltcg: false
      - name: Release
        inline_expansion: O2
        intrinsics: false
        ltcg: false

  - name: ChoMath #プロジェクト名
    type: StaticLib #構成の種類
    sources: [] #ソースファイル
    include_dirs: [${ProjectDir}, ${ProjectDir}include/] #追加のインクルードディレクトリ
    links: [] #追加の依存ファイル
    pch: # プリコンパイラヘッダ
      enable: true
      header:
      source:
    configs: #構成ごとの設定
      - name: Debug
        build:
          target_dir: ${SolutionDir}..\generated\outputs\${Configuration}\ #出力ディレクトリ
          obj_dir:${SolutionDir}..\generated\intermediate\${ProjectName}\ #中間ディレクトリ
          target_name: ${ProjectName} #ターゲット名

      - name: Release
        build:
          target_dir: ${SolutionDir}..\generated\outputs\${Configuration}\ #出力ディレクトリ
          obj_dir:${SolutionDir}..\generated\intermediate\${ProjectName}\ #中間ディレクトリ
          target_name: ${ProjectName} #ターゲット名

  - name: ChoPhysics
    type: StaticLib #構成の種類
    sources: [] #ソースファイル
    include_dirs: [${ProjectDir}, ${ProjectDir}include/, ${ProjectDir}../ChoMath/, ${ProjectDir}../ChoMath/include] #追加のインクルードディレクトリ
    links: [] #追加の依存ファイル
    pch: # プリコンパイラヘッダ
      enable: true
      header:
      source:
    configs: #構成ごとの設定
      - name: Debug
        build:
          target_dir: ${ProjectDir}lib\${Configuration}\ #出力ディレクトリ

      - name: Release
        build:
          target_dir: ${ProjectDir}lib\${Configuration}\ #出力ディレクトリ

  - name: DirectXTex
    type: StaticLib #構成の種類
    sources: [] #ソースファイル
    include_dirs: [${ProjectDir}, ${ProjectDir}Shader/Compiled] #追加のインクルードディレクトリ
    links: [] #追加の依存ファイル
    pch: # プリコンパイラヘッダ
      enable: true
      header:
      source:
    msvc:
    extra_compile_options: [/Zc:twoPhase- /Zc:__cplusplus]
    configs: #構成ごとの設定
      - name: Debug
        build:
          target_dir: ${ProjectDir}lib\${Configuration}\ #出力ディレクトリ

      - name: Release
        build:
          target_dir: ${ProjectDir}lib\${Configuration}\ #出力ディレクトリ

  - name: GameTemplate
    type: WindowedApp #構成の種類
    sources: [] #ソースファイル
    include_dirs: [${SolutionDir}, ${SolutionDir}ChoMath, ${SolutionDir}ChoMath/include] #追加のインクルードディレクトリ
    links: [] #追加の依存ファイル
    pch: # プリコンパイラヘッダ
      enable: true
      header:
      source:
    msvc:
    extra_compile_options: [/Zc:twoPhase- /Zc:__cplusplus]
    configs: #構成ごとの設定
      - name: Debug

      - name: Release

  - name: imgui
    type: StaticLib #構成の種類
    sources: [] #ソースファイル
    include_dirs: [${ProjectDir}, ${ProjectDir}include\] #追加のインクルードディレクトリ
    links: [] #追加の依存ファイル
    msvc:
      warning_level: 3
    configs: #構成ごとの設定
      - name: Debug
        build:
          target_dir: ${ProjectDir}lib\${Configuration}\ #出力ディレクトリ

      - name: Release
        build:
          target_dir: ${ProjectDir}lib\${Configuration}\ #出力ディレクトリ

  - name: imgui_Extensions

  - name: PhysicsEngine

  - name: TheatriaEngine



  - name: ChoEngine
    type: StaticLib
    sources: [project/engine/**.cpp, project/engine/**.h]
    include_dirs: [project/engine/include]
    links: [d3d12, dxgi, dxguid]

  - name: ChoEditor
    type: WindowedApp
    sources: [project/editor/**.cpp, project/editor/**.h]
    include_dirs: [project/engine/include, project/editor]
    links: [ChoEngine, d3d12, dxgi, dxguid]
    postbuild_copy_dirs:
      - from: assets
        to: assets
    working_directory: ${target_dir}